@using Continuum.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ContinuumUser> SignInManager

@{
    ViewData["Title"] = "Home";
}

<div class="text-center welcome">
    <div class="content">
        <img src="~/img/continuum.svg" />
        <div>
            @if (!SignInManager.IsSignedIn(User))
            {
                <a href="~/Identity/Account/Register" class="btn button-primary">Register</a>
            }
            <a href="~/app" class="btn button-secondary">Open Continuum</a>
        </div>
    </div>
</div>

<svg xmlns="http://www.w3.org/2000/svg" id="wave-transition" viewBox="0 0 1440 68" enable-background="new 0 0 1440 68"><path fill="#bbaaee" transform="translate(0 -1977)" d="m 1622 1938 c 0 0 -410 169 -913 75.5 c -503 -94 -978 56 -978 56 v 440 h 1891 v -572" /></svg>
<div class="container-purple">
    <section class="flex-cards">
        <div class="card border-top-pink animated fadeInDown">
            <h2>Yet Another Chat App</h2>
            <p>There's literally no reason to use this over anything else! Like, actually just go use something else.</p>
        </div>
        <div class="card border-top-purple animated fadeInDown d-200">
            <h2>With Stolen Ideas</h2>
            <p>We really liked the features that the dozens of other chat apps already have, so we took some and put them in ours.</p>
        </div>
        <div class="card border-top-blue animated fadeInDown d-400">
            <h2>But Done Worse</h2>
            <p>A light theme that doesn't suck, but the ability to be in multiple servers with one account, while being able to maintain per-server control? That's us. In the future. Not right now.</p>
        </div>
    </section>
</div>